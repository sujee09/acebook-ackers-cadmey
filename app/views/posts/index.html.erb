<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

<div id="abc"></div>
<div id="posts"></div>
<div id='like-button'></div>
<%= link_to new_post_path do %>
  New post
<% end %>

<%= javascript_include_tag 'interface' %>


<!-- <script type="text/babel">
  'use strict';

  fetch('/posts_api')
    .then(response => response.json())
    .then(data => {

      let divPosts = document.getElementById("posts")
      divPosts.innerHTML = ''
      data.forEach(element => {
          let div = document.createElement('div')
          div.setAttribute('id', 'post')
          let user = `<p>${element.user_name}</p><br>`
          let message = `<p>${element.message}</p><br>`
          let time = `<p>${element.created_at}</p><br>`
          let like_button = document.createElement('div')
          div.innerHTML = user + message + time
          ReactDOM.render(e(LikeButton, {post_id: element.id}),  like_button);
          div.appendChild(like_button)
          divPosts.appendChild(div)
      });
    });




    const e = React.createElement;


    class LikeButton extends React.Component {
      constructor(props) {
        super(props);
        this.state = {
          loading: true,
          liked: false,
        };
        this.handleClick = this.handleClick.bind('this');
        this.fetchLikeData()
      }

      fetchLikeData() {
        console.log(this.props)
        const csrf = document.querySelector("meta[name='csrf-token']").getAttribute("content");
        fetch("/likes/data", {
          method: "POST",
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': csrf
          },
          body: JSON.stringify({ post_id: this.props.post_id })
        })
        .then(response => {
          return response.json();
        })
        .then(data => {
          this.setState(data)
          console.log(data)
        })
      }
      handleClick = () => {
        this.setState(prevState => (prevState, {
          liked: !prevState.liked
        }));
        this.sendLikeData()
      }

      render() {
        console.log(this.state)
        if (this.state.loading) {
          return ''
        }
        return e(
            'button',
            { onClick: () =>  this.handleClick() },
            this.state.liked ? 'Unlike' : 'Like'
            );
        }



      sendLikeData() {
        if (this.state.liked) {
          console.log(this.props)
          const csrf = document.querySelector("meta[name='csrf-token']").getAttribute("content");
          fetch("/likes/destroy", {
            method: "POST",
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': csrf
            },
            body: JSON.stringify({ post_id: this.props.post_id})
          })
          .then(response => {
          console.log(response);
          console.log(response.json());
          console.log(JSON.stringify(response));
        })
      } else {
          console.log(this.props)
          const csrf = document.querySelector("meta[name='csrf-token']").getAttribute("content");
          fetch("/likes/create", {
            method: "POST",
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': csrf
            },
            body: JSON.stringify({ post_id: this.props.post_id})
          })
          .then(response => {
          console.log(response);
          console.log(response.json());
          console.log(JSON.stringify(response));
        })
      }
    }
  }

    class PostMessage extends React.Component {
      constructor(props) {
        super(props);
        this.handleClick = this.handleClick.bind('this');

      }

      handleClick = () => {
        console.log('hello from handle click')
        this.sendPost()
      }

      render() {
        console.log(this.state)
        return e(
            'button',
            { onClick: () =>  this.handleClick() },
            'Create Post'
            );
        }



      sendPost() {
          console.log('hello from send post')
          const csrf = document.querySelector("meta[name='csrf-token']").getAttribute("content");
          fetch("/posts", {
            method: "POST",
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': csrf
            },
            body: JSON.stringify({ message: "Test"})
          })
          .then(response => {
          console.log(response);
          console.log(response.json());
          console.log(JSON.stringify(response));
          })

      }
    }

    const postContainer = document.getElementById('abc')
    ReactDOM.render(e(PostMessage), postContainer)
</script> -->
